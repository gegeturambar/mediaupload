<?php

namespace AppBundle\Repository;
use AppBundle\Entity\Role;
use Doctrine\ORM\EntityManager;
use Doctrine\ORM\Mapping;
use Symfony\Component\Config\Definition\Exception\Exception;

/**
 * RoleRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class RoleRepository extends \Doctrine\ORM\EntityRepository
{

    public function __construct(EntityManager $em, Mapping\ClassMetadata $class)
    {
        // check if empty, if yes, create accordingly
//        $persister = $em->getUnitOfWork()->getEntityPersister($this->_entityName);
        $qb = $em->createQueryBuilder();
        $qb->select("count(role.id)");
        $qb->from("AppBundle:Role","role");
        $count = $qb->getQuery()->getSingleScalarResult();

        if( $count <= 0 ){
            //TODO passer dans un service pour recup data from parameters
            foreach(array("SUPERUSER","ADMIN","USER") as $r){
                try {
                    $role = new Role();
                    $role->setName("ROLE_$r");
                    $ret = $em->persist($role);
                }catch (Exception $ex){
                }
            }
            $em->flush();
        }
        parent::__construct($em, $class);
    }

    public function getDefaultRole(){
        $name = 'ROLE_USER';
        $t= $this->createQueryBuilder("role")
            ->where('role.name LIKE :name ')
            ->setParameter('name',"ROLE_USER")
            ->getQuery()
            ->getSingleResult()
        ;
        return $t;
    }
}
