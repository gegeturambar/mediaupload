<?php

namespace AppBundle\Repository;
use AppBundle\Entity\Directory;
use Doctrine\ORM\EntityManager;
use Doctrine\ORM\Mapping;
use Symfony\Component\Config\Definition\Exception\Exception;

/**
 * DirectoryRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class DirectoryRepository extends \Doctrine\ORM\EntityRepository
{
    protected $container;

    public function __construct(EntityManager $em, Mapping\ClassMetadata $class)
    {
        parent::__construct($em, $class);
    }

    public function init( $basePath, $role ){

        $em = $this->getEntityManager();
        $tableName = $this->getClassMetadata()->getTableName();

        $connection = $em->getConnection();

        $connection->beginTransaction();

        try {

            /*
            $qb = $em->createQueryBuilder();
            $qb->delete()->from("AppBundle:Directory",$tableName);
            $qb->getQuery()->execute();
*/
            $connection->query("SET foreign_key_checks = 0;");
            $connection->query('DELETE FROM '.$tableName);

            $connection->query('ALTER TABLE '.$tableName.' AUTO_INCREMENT = 1 ;');

            $directory = new Directory();
            $directory->setName('ROOT');
            $directory->setPath($basePath);
            $directory->setAccess($role);
            $em->persist($directory);
            $em->flush();

            $connection->commit();
            return true;

        } catch (\Exception $e) {
            $connection->rollback();
            return false;
            //var_dump($e->getMessage());die(" exception here ");
        }
        return false;

    }

    public function fetchOneByNameAndParent($name,$parentid = null){
        return $this->findOneBy(array("name"=>$name,"parent"=>$parentid));
    }
}
